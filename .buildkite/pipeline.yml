steps:
  - label: "CUDA.jl - Julia 1.6"
    plugins:
      - JuliaCI/julia#v1:
          version: 1.6
      - JuliaCI/julia-coverage#v1:
          codecov: true
    command: |
      julia -e 'using Pkg;

                println("--- :julia: Instantiating project");
                Pkg.develop(PackageSpec(path=pwd()));
                Pkg.add(PackageSpec(name="CUDA", rev="master"));
                Pkg.build();

                println("+++ :julia: Running tests");
                Pkg.test("CUDA"; coverage=true);'
    agents:
      queue: "juliagpu"
      cuda: "*"
    if: build.message !~ /\[skip tests\]/
    timeout_in_minutes: 60

  - label: "CUDA.jl - Julia 1.7"
    plugins:
      - JuliaCI/julia#v1:
          version: 1.7
      - JuliaCI/julia-coverage#v1:
          codecov: true
    command: |
      julia -e 'using Pkg;

                println("--- :julia: Instantiating project");
                Pkg.develop(PackageSpec(path=pwd()));
                Pkg.add(PackageSpec(name="CUDA", rev="master"));
                Pkg.build();

                println("+++ :julia: Running tests");
                Pkg.test("CUDA"; coverage=true);'
    agents:
      queue: "juliagpu"
      cuda: "*"
    if: build.message !~ /\[skip tests\]/
    timeout_in_minutes: 60

  - label: "oneAPI.jl - Julia 1.6"
    plugins:
      - JuliaCI/julia#v1:
          version: 1.6
      - JuliaCI/julia-coverage#v1:
          codecov: true
    command: |
      julia -e 'using Pkg;

                println("--- :julia: Instantiating project");
                Pkg.develop(PackageSpec(path=pwd()));
                Pkg.add(PackageSpec(name="oneAPI", rev="master"));
                Pkg.build();

                println("+++ :julia: Running tests");
                Pkg.test("oneAPI"; coverage=true);'
    agents:
      queue: "juliagpu"
      intel: "*"
    if: build.message !~ /\[skip tests\]/
    timeout_in_minutes: 60

  - label: "oneAPI.jl - Julia 1.7"
    plugins:
      - JuliaCI/julia#v1:
          version: 1.7
      - JuliaCI/julia-coverage#v1:
          codecov: true
    command: |
      julia -e 'using Pkg;

                println("--- :julia: Instantiating project");
                Pkg.develop(PackageSpec(path=pwd()));
                Pkg.add(PackageSpec(name="oneAPI", rev="master"));
                Pkg.build();

                println("+++ :julia: Running tests");
                Pkg.test("oneAPI"; coverage=true);'
    agents:
      queue: "juliagpu"
      intel: "*"
    if: build.message !~ /\[skip tests\]/
    timeout_in_minutes: 60

  - label: "AMDGPU.jl - Julia 1.7"
    plugins:
      - JuliaCI/julia#v1:
          version: 1.7
      - JuliaCI/julia-coverage#v1:
          codecov: true
    command: |
      julia -e 'using Pkg;

                println("--- :julia: Instantiating project");
                Pkg.develop(PackageSpec(path=pwd()));
                Pkg.add(PackageSpec(name="AMDGPU", rev="master"));
                Pkg.build();

                println("+++ :julia: Running tests");
                Pkg.test("AMDGPU"; coverage=true);'
    agents:
      queue: "juliagpu"
      rocm: "*"
    if: build.message !~ /\[skip tests\]/
    timeout_in_minutes: 180

  - label: "Enzyme.jl - Julia 1.6"
    plugins:
      - JuliaCI/julia#v1:
          version: 1.6
      - JuliaCI/julia-coverage#v1:
          codecov: true
    command: |
      julia -e 'using Pkg;

                println("--- :julia: Instantiating project");
                Pkg.develop(PackageSpec(path=pwd()));
                Pkg.add(PackageSpec(name="Enzyme", rev="main"));
                Pkg.build();

                println("+++ :julia: Running tests");
                Pkg.test("Enzyme"; coverage=true);'
    agents:
      queue: "juliagpu"
    if: build.message !~ /\[skip tests\]/
    timeout_in_minutes: 60

  - label: "Enzyme.jl - Julia 1.7"
    plugins:
      - JuliaCI/julia#v1:
          version: 1.7
      - JuliaCI/julia-coverage#v1:
          codecov: true
    command: |
      julia -e 'using Pkg;

                println("--- :julia: Instantiating project");
                Pkg.develop(PackageSpec(path=pwd()));
                Pkg.add(PackageSpec(name="Enzyme", rev="main"));
                Pkg.build();

                println("+++ :julia: Running tests");
                Pkg.test("Enzyme"; coverage=true);'
    agents:
      queue: "juliagpu"
    if: build.message !~ /\[skip tests\]/
    timeout_in_minutes: 60

env:
  JULIA_PKG_SERVER: "" # it often struggles with our large artifacts
  SECRET_CODECOV_TOKEN: "ya+qhtTvHdnO/U1KSoTcdCRB4WCCFU7Or2wt7YlzSZJWqITbLxidDfvqxTMG0mPo6M9I2XW6GULCleA9okq06reF5//14WSmxiF8qPwBONj6m+ImdkLpju2FfLCAtISFJYRM5OJRdDuQ5hKz+FyNoDG/jWBm/vrHoXzrVOHpcHGOPvrEtSwkdo8ew0prFq5RTi6c0Pe+Vj+xRMH7o8QhIPisYUd4RWsA/BL3ukxqSSzpU1+ZJ4F5v6eZILSaKSPb04FzpotkbH+UUCvJSn28Cif+JQANJ9HDLgaa1BbSlOAcu7syktS2fJOyOTfE67er9Lu8utqz6973Evnqjfbclw==;U2FsdGVkX19sIzsESyU7ZuRndlTrQy67iOsrPzevxn+W/dWZBd3ds5Soh1ig5ivoUi4tLZrqUv/ZyPIHohVy0A=="
